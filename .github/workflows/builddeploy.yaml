name: BuildDeploy 

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_NAME: python-template

jobs:
  build-test:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    strategy:
      matrix:
        python-version: ["3.11"]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Format with Black
        run: |
          make format
      - name: Lint with ruff
        run: |
          make lint
      - name: Test with pytest
        run: |
          make test

    # Deploy docker image to Docker Hub
  deploy-docker-hub:
    runs-on: ubuntu-latest
    needs: [build-test] # only run if build succeeds
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        env:
          DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKERHUB_TOKEN}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Build the Docker image
        run: docker build -t ${{secrets.DOCKERHUB_USERNAME}}/$PROJECT_NAME:latest -f Dockerfile .
      - name: Docker Push
        run: docker push ${{secrets.DOCKERHUB_USERNAME}}/$PROJECT_NAME